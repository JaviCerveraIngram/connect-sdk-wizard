/*
    This file has been generated by Connect SDK Wizard.
    Copyright (c) 2020 Ingram Micro. All Rights Reserved.
*/
using connect;
using connect.models;


class PurchaseAssetFlow : Flow
{
    public PurchaseAssetFlow()
    : base(request => ((AssetRequest)request).type == "purchase")
    {
        this.step("Check item quantity", _ => this.CheckItemQuantity())
            .step("Check mail param", _ => this.CheckMailParam())
            .step("Set purchase id", _ => this.SetPurchaseId())
            .step("Approve request", _ => this.ApproveRequest());
    }


    public void CheckItemQuantity()
    {
        for (int i = 0; i < this.getAssetRequest().asset.items.length(); ++i)
        {
            Item item = (Item)this.getAssetRequest().asset.items.get(i);
            if (int.Parse(item.quantity) > 100000)
            {
                this.fail("Cannot purchase product in such quantities.");
            }
        }
    }


    public void CheckMailParam()
    {
        for (int i = 0; i < this.getAssetRequest().asset.@params.length(); ++i)
        {
            Param param = (Param)this.getAssetRequest().asset.@params.get(i);
            if (param.name == "email" && (string.IsNullOrEmpty(param.value)))
            {
                param.valueError = "Email address has not been provided, please provide one.";
                this.inquire(null);
            }
        }
    }


    public void SetPurchaseId()
    {
        Param param = this.getAssetRequest().asset.getParamById("purchase_id");
        if (param != null)
        {
            param.value = "...";  // We can assign the id given by the external service here
        }
        else
        {
            this.fail("The asset is expected to have a \"purchase_id\" param.");
        }
    }


    public void ApproveRequest()
    {
        this.approveByTemplate("TL-000-000-000");
    }
}
